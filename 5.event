using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Event
{
    class Program
    {
        static void Main(string[] args)
        {
            //1.
            var e = new EventTest(5);//Event fired
            e.SetValue(100);//Event fired
            e.ChangeNum += new EventTest.NumManipulationHandler(EventTest.EventFired);
            e.SetValue(200);//Binded Event fired
            //2.
            I i = new Myclass();
            i.MyEvent += new MyDelegate(f);
            i.FireAway();
            Console.ReadLine();
        }
        private static void f()
        {
            Console.WriteLine("This is called when the event fired");
        }
    }
    class EventTest 
    {
        private int value;
        public delegate void NumManipulationHandler();
        public event NumManipulationHandler ChangeNum;
        public EventTest(int n)
        {
            SetValue(n);
        }
        public static void EventFired()
        {
            Console.WriteLine("Binded Event fired");
        }
        protected virtual void OnNumChanged()
        {
            if(ChangeNum!=null)
            {
                ChangeNum();
            }
            else
            {
                Console.WriteLine("Event fired");
            }
        }
        public void SetValue(int n)
        {
            if(value!=n)
            {
                value = n;
                OnNumChanged();
            }
        }

    }

    public delegate void MyDelegate();
    public interface I
    {
        event MyDelegate MyEvent;
        void FireAway();
    }
    public class Myclass : I
    {
        public event MyDelegate MyEvent;
        public void FireAway()
        {
            if (MyEvent != null)
            {
                MyEvent();
            }
        }
    }
}
